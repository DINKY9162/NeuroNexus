#include<bits/stdc++.h>
using namespace std;

struct Task{
	string description;
	string status;
};

vector<Task>tasks;

void displayTasks(vector<Task>& tasks){
	cout<<"********    To-Do List    ********:\n\n";
	cout<<"Task Number \t Description \t Status"<<endl;
	for(size_t i=0;i<tasks.size();++i){
		cout<<i+1<<"\t\t "<<tasks[i].description<<"\t\t "<<tasks[i].status<<endl;
    }
    cout<<endl;
}

void addTask(vector<Task>& task){
	Task newTask;
    cout<< "Enter task description:";
    cin.ignore();
    getline(cin,newTask.description); 
	newTask.status= "pending";
    tasks.push_back (newTask);
    cout << "Task added Successfully!\n";
}
  
void updateTask(vector<Task>& task){
	int taskIndex;
	cout << "Enter the index of the task to mark as completed: \n";
    cin >> taskIndex;
    if( taskIndex >= 1 && taskIndex <= task.size() ){
    	task[taskIndex-1].status = "completed";
        cout << "Task  marked asÂ  completed!\n";
	}
	else{
		cout << "Invalid task index.\n";
	}
}

void removeTask(vector<Task>& task){
	int taskIndex;
    cout << "Enter the index of the task to remove: \n";
    cin >> taskIndex;
    if (taskIndex >=1 && taskIndex <= tasks.size() ) { 
	tasks.erase(tasks.begin() + taskIndex - 1);
    cout << "Task removed Successfully!\n";}
    else{
        cout << "Invalid task index.\n";
    }
}

int main() {
   int choice;
   cout <<"Simple To Do List Manager\n";
   while (true) {
   	cout << "\noptions:\n";
     cout << "1. Add Task\n";
     cout << "2. View Tasks\n";
     cout << "3. Mark Task as completed\n";
     cout << "4. Remove Task\n";
     cout << "5. Exit\n";
     cout << "Enter your choice: \n";
     cin >> choice;
     if(choice == 1 ){
     	addTask(tasks);
	 }
	 else if(choice == 2 ){
     	if(tasks.empty()){
     		cout << "No tasks to display.\n";
		 }
		 else{
		 	displayTasks(tasks);
		 }
	 }
	 else if(choice == 3 ){
     	updateTask(tasks);
	 }
	 else if(choice == 4 ){
     	removeTask(tasks);
	 }
	 else if(choice ==5){
	 	cout<<"Exiting the program.\n";
	 	break;
	 }
	 else{
	 	cout<<"Invalid choice.Please choose a valid option.\n";
	 }
   }
	return 0;
}
